<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Follow Page</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg-color: #0a0f1a;
      --card-bg: #1f2937;
      --card-glass: rgba(31, 41, 55, 0.7);
      --text-primary: #f1f5f9;
      --text-secondary: #9ca3af;
      --button-bg: #f97316;
      --button-hover: #fb923c;
      --accent-glow: #3b82f6;
      --shadow-sm: 0 4px 16px rgba(0, 0, 0, 0.4);
      --shadow-md: 0 8px 32px rgba(0, 0, 0, 0.5);
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      scroll-behavior: smooth;
    }

    body {
      font-family: 'Inter', sans-serif;
      background: var(--bg-color);
      color: var(--text-primary);
      min-height: 100vh;
      overflow-x: hidden;
      position: relative;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 32px 16px;
    }

    /* Background Particles */
    #particles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      opacity: 0.15;
    }

    /* Container */
    .container, .container-2 {
      max-width: 600px;
      width: 100%;
      background: var(--card-glass);
      backdrop-filter: blur(12px);
      border-radius: 24px;
      padding: 32px;
      margin-bottom: 32px;
      box-shadow: var(--shadow-md);
      border: 1px solid rgba(255, 255, 255, 0.05);
      position: relative;
      transition: var(--transition);
      animation: fadeInUp 0.6s ease-out;
    }

    .container:hover, .container-2:hover {
      transform: translateY(-6px);
      box-shadow: 0 12px 40px rgba(59, 130, 246, 0.6);
    }

    .container-2 {
      max-width: 1200px;
    }

    /* Profile Section */
    .profile-section {
      text-align: center;
      margin-bottom: 32px;
    }

    .profile-pic {
      width: 160px;
      height: 160px;
      margin: 0 auto;
      border-radius: 50%;
      overflow: hidden;
      border: 5px solid var(--button-bg);
      box-shadow: 0 0 20px rgba(249, 115, 22, 0.3);
      transition: var(--transition);
      position: relative;
    }

    .profile-pic img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.5s ease;
    }

    .profile-pic:hover img {
      transform: scale(1.1);
    }

    .user-info h2 {
      font-size: 2rem;
      font-weight: 700;
      margin: 16px 0 8px;
      background: linear-gradient(90deg, var(--text-primary), #d1d5db);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .user-info p {
      color: var(--text-secondary);
      font-size: 1rem;
      font-weight: 400;
      letter-spacing: 0.02em;
    }

    .stats {
      display: flex;
      justify-content: center;
      gap: 24px;
      margin-top: 16px;
      font-size: 0.9rem;
      color: var(--text-secondary);
    }

    .stats span {
      display: flex;
      align-items: center;
      gap: 6px;
      transition: color 0.3s ease;
    }

    .stats span:hover {
      color: var(--button-bg);
    }

    /* Bio Section */
    .bio-section {
      background: linear-gradient(145deg, #2d3748, #1f2937);
      border-radius: 16px;
      padding: 24px;
      margin: 24px 0;
      box-shadow: inset 0 4px 12px rgba(0, 0, 0, 0.3);
      cursor: pointer;
      transition: var(--transition);
    }

    .bio-section:hover {
      background: linear-gradient(145deg, #374151, #2d3748);
    }

    .bio-section h3 {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 12px;
      color: var(--text-primary);
    }

    .bio-section p {
      color: var(--text-secondary);
      font-size: 1.05rem;
      line-height: 1.7;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .bio-section a {
      color: var(--button-bg);
      font-weight: 500;
      text-decoration: none;
      transition: var(--transition);
    }

    .bio-section a:hover {
      color: var(--button-hover);
      text-decoration: underline;
    }

    /* Bio Modal */
    .bio-modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.8);
      z-index: 1000;
      align-items: center;
      justify-content: center;
      animation: fadeIn 0.3s ease;
    }

    .bio-modal-content {
      background: var(--card-bg);
      border-radius: 16px;
      padding: 24px;
      max-width: 500px;
      width: 90%;
      max-height: 80vh;
      overflow-y: auto;
      box-shadow: var(--shadow-md);
      position: relative;
      animation: slideIn 0.3s ease;
    }

    .bio-modal-content h3 {
      font-size: 1.75rem;
      margin-bottom: 16px;
    }

    .bio-modal-content p {
      color: var(--text-secondary);
      font-size: 1.1rem;
      line-height: 1.8;
    }

    .bio-close {
      position: absolute;
      top: 16px;
      right: 16px;
      font-size: 1.5rem;
      color: var(--text-secondary);
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .bio-close:hover {
      color: var(--button-bg);
    }

    /* Follow Button */
    .btn-follow {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 14px 28px;
      font-size: 1.1rem;
      font-weight: 600;
      background: linear-gradient(135deg, var(--button-bg), #d97706);
      color: #fff;
      border: none;
      border-radius: 50px;
      cursor: pointer;
      box-shadow: var(--shadow-sm);
      transition: var(--transition);
      position: relative;
      overflow: hidden;
    }

    .btn-follow:hover {
      background: linear-gradient(135deg, var(--button-hover), #f59e0b);
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(251, 146, 60, 0.5);
    }

    .btn-follow:focus {
      outline: 3px solid var(--button-hover);
      outline-offset: 2px;
    }

    .btn-follow.loading::after {
      content: '';
      position: absolute;
      width: 20px;
      height: 20px;
      border: 3px solid #fff;
      border-top-color: transparent;
      border-radius: 50%;
      animation: spin 0.8s linear infinite;
    }

    .btn-follow.loading span, .btn-follow.loading i {
      opacity: 0;
    }

    /* Blog List */
    .container-2 h2 {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 24px;
      text-align: left;
      background: linear-gradient(90deg, var(--text-primary), var(--button-bg));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    .blog-list {
      width: 100%;
    }

    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 28px;
    }

    .blog-item {
      background: var(--card-glass);
      backdrop-filter: blur(8px);
      border-radius: 20px;
      overflow: hidden;
      box-shadow: var(--shadow-sm);
      transition: var(--transition);
      position: relative;
      cursor: pointer;
      animation: fadeInUp 0.6s ease-out;
      animation-delay: calc(var(--index) * 0.1s);
    }

    .blog-item:hover {
      transform: translateY(-8px);
      box-shadow: 0 12px 40px rgba(59, 130, 246, 0.6);
    }

    .blog-image {
      width: 100%;
      height: 380px;
      object-fit: cover;
      border-radius: 16px 16px 0 0;
      transition: transform 0.5s ease;
    }

    .blog-item:hover .blog-image {
      transform: scale(1.05);
    }

    .blog-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      opacity: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--text-primary);
      font-size: 1rem;
      font-weight: 500;
      text-align: center;
      padding: 16px;
      transition: opacity 0.3s ease;
    }

    .blog-item:hover .blog-overlay {
      opacity: 1;
    }

    .blog-title {
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--text-primary);
      padding: 16px;
      margin: 0;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .no-blogs {
      text-align: center;
      color: var(--text-secondary);
      font-size: 1.2rem;
      padding: 24px;
      background: var(--card-bg);
      border-radius: 16px;
      box-shadow: var(--shadow-sm);
      margin: 24px 0;
      animation: fadeIn 0.5s ease;
    }

    /* Animations */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(-20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
      .container, .container-2 {
        max-width: 100%;
      }

      .grid {
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
      }
    }

    @media (max-width: 768px) {
      body {
        padding: 24px 12px;
      }

      .container, .container-2 {
        padding: 24px;
      }

      .profile-pic {
        width: 120px;
        height: 120px;
      }

      .user-info h2 {
        font-size: 1.75rem;
      }

      .container-2 h2 {
        font-size: 1.75rem;
      }

      .blog-image {
        height: 160px;
      }
    }

    @media (max-width: 480px) {
      .container, .container-2 {
        padding: 16px;
        border-radius: 16px;
      }

      .profile-pic {
        width: 100px;
        height: 100px;
      }

      .user-info h2 {
        font-size: 1.5rem;
      }

      .bio-section h3 {
        font-size: 1.25rem;
      }

      .bio-section p {
        font-size: 1rem;
      }

      .btn-follow {
        padding: 12px 20px;
        font-size: 1rem;
      }

      .container-2 h2 {
        font-size: 1.5rem;
      }

      .blog-title {
        font-size: 1.1rem;
      }

      .blog-image {
        height: 140px;
      }
    }
  </style>
</head>
<body>
  <canvas id="particles"></canvas>

  <div class="container" style="--index: 1;">
    <!-- Profile Section -->
    <div class="profile-section">
      <div class="profile-pic" role="img" aria-label="Profile Picture">
        <img src="<%= curUser.ProfilePic ? curUser.ProfilePic : '/path/to/default-pic.jpg' %>" alt="" loading="lazy">
      </div>
      <div class="user-info">
        <h2><%= curUser.userName %></h2>
        <p>Email: <%= curUser.email.replace(/(.{2}).+@/, '$1***@') %></p>
        <div class="stats">
          <span><i class="fas fa-users"></i> <span class="follower-count"><%= curUser.followers ? curUser.followers.length : 0 %></span> Followers</span>
          <span><i class="fas fa-blog"></i> <%= userBlogs.length %> Blogs</span>
        </div>
      </div>
    </div>

    <!-- Bio Section -->
    <div class="bio-section" onclick="openBioModal()">
      <h3>About Me</h3>
      <p id="bio-text">
        <%= curUser.Bio 
          ? curUser.Bio 
          : "This user hasn't added a bio yet." %>
      </p>
    </div>

    <!-- Bio Modal -->
    <div class="bio-modal" id="bioModal">
      <div class="bio-modal-content">
        <span class="bio-close" onclick="closeBioModal()" aria-label="Close">&times;</span>
        <h3>About <%= curUser.userName %></h3>
        <p><%= curUser.Bio ? curUser.Bio : "No bio available." %></p>
      </div>
    </div>

    <!-- Follow Button -->
    <% if (locals.user) { %>
    <% if (curUser._id.toString() !== user._id.toString()) { %>
      <form style="display: flex; justify-content: center; padding-bottom: 10px;" action="/follow/<%= curUser._id %>" method="POST" onsubmit="handleFollow(event, this)">
        <button type="submit" class="btn-follow" aria-label="Follow or Unfollow">
          <i class="fas fa-user-plus" aria-hidden="true"></i>
          <span><% if (curUser.followers.includes(user._id)) { %>Unfollow<% } else { %>Follow<% } %></span>
        </button>
      </form>
    <% } %>
    <% } %>

    <!-- Footer -->
    <div style="display: flex; justify-content: center;" class="footer">
      <p>Want to see more? <a href="/">Explore other profiles</a></p>
    </div>
  </div>

  <div class="container-2" style="--index: 2;">
    <h2>Blogs</h2>
    <div class="blog-list">
      <% if (userBlogs.length > 0) { %>
        <div class="grid">
          <% userBlogs.forEach((blog, index) => { %>
            <div class="blog-item" style="--index: <%= index + 3 %>;" onclick="location.href='/blog/<%= blog._id %>'" role="link" aria-label="View blog: <%= blog.title %>">
              <img src="<%= blog.CoverImgURL %>" alt="Blog Cover" class="blog-image" loading="lazy">
              <div class="blog-overlay">Click to read more</div>
              <h4 class="blog-title"><%= blog.title %></h4>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <p class="no-blogs">No blogs available.</p>
      <% } %>
    </div>
  </div>

  <script>
    // Bio Modal
    function openBioModal() {
      const modal = document.getElementById('bioModal');
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function closeBioModal() {
      const modal = document.getElementById('bioModal');
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }

    // Follow Button Loading State
    function handleFollow(event, form) {
      event.preventDefault();
      const button = form.querySelector('.btn-follow');
      button.classList.add('loading');
      setTimeout(() => {
        form.submit();
      }, 1000); // Simulate async request
    }

    // Particle Background
    const canvas = document.getElementById('particles');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    const particleCount = 1000;

    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 2 + 1;
        this.speedX = Math.random() * 0.5 - 0.25;
        this.speedY = Math.random() * 0.5 - 0.25;
      }

      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        if (this.size > 0.2) this.size -= 0.01;
        if (this.x < 0 || this.x > canvas.width) this.speedX *= -1;
        if (this.y < 0 || this.y > canvas.height) this.speedY *= -1;
      }

      draw() {
        ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
      }
    }

    function initParticles() {
      for (let i = 0; i < particleCount; i++) {
        particles.push(new Particle());
      }
    }

    function animateParticles() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles.forEach((particle, i) => {
        particle.update();
        particle.draw();
        if (particle.size <= 0.2) {
          particles.splice(i, 1);
          particles.push(new Particle());
        }
      });
      requestAnimationFrame(animateParticles);
    }

    initParticles();
    animateParticles();

    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });

    // Scroll Animations
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.opacity = 1;
          entry.target.style.transform = 'translateY(0)';
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('.container, .container-2, .blog-item').forEach(el => {
      el.style.opacity = 0;
      el.style.transform = 'translateY(20px)';
      observer.observe(el);
    });

    // Follower Count Animation
    const followerCount = document.querySelector('.follower-count');
    if (followerCount) {
      const target = parseInt(followerCount.textContent);
      let current = 0;
      const increment = Math.ceil(target / 50);
      const animateCount = () => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(counter);
        }
        followerCount.textContent = current;
      };
      const counter = setInterval(animateCount, 50);
    }
  </script>
</body>
</html>